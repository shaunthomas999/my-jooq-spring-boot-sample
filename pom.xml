<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.shaunthomas</groupId>
  <artifactId>my-jooq-spring-boot-sample</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>my-jooq-spring-boot-sample</name>
  <description>my-jooq-spring-boot-sample</description>
  <properties>
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <spring-boot.version>3.1.2</spring-boot.version>
    <jooq.version>3.18.5</jooq.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.1.0</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>src/main/resources/application.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>
        <executions>
          <execution>
            <id>generate-postgres</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <!-- JDBC connection parameters -->
              <jdbc>
                <driver>${datasource.driver}</driver>
                <url>${datasource.jdbcUrl}</url>
                <user>${datasource.username}</user>
                <password>${datasource.password}</password>
              </jdbc>
              <!-- Generator parameters -->
              <generator>
                <database>
                  <name>
                    org.jooq.meta.postgres.PostgresDatabase
                  </name>
                  <includes>.*</includes>
                  <excludes/>
                  <inputSchema>public</inputSchema>
                </database>
                <generate>
                  <pojos>true</pojos>
                  <pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
                  <javaTimeTypes>true</javaTimeTypes>
                  <fluentSetters>true</fluentSetters>
                  <!-- Generate the DAO classes -->
<!--                  <daos>true</daos>-->
                  <!-- Annotate DAOs (and other types) with spring annotations, such as @Repository and @Autowired
                       for auto-wiring the Configuration instance, e.g. from Spring Boot's jOOQ starter -->
<!--                  <springAnnotations>true</springAnnotations>-->
                  <!-- Generate Spring-specific DAOs containing @Transactional annotations -->
<!--                  <springDao>true</springDao>-->
                </generate>
                <target>
                  <packageName>io.shaunthomas.jooq.model</packageName>
                  <directory>target/generated-sources/jooq</directory>
                </target>
              </generator>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
